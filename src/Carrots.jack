class Carrots{

    field Array carrot_xx;
    field Array carrot_yy;
    
    field int data_size;
    field int carrots_used;

    constructor Carrots new(int size){
        //height = 16
        //width = 9
        let carrot_xx = Array.new(size);
        let carrot_yy = Array.new(size);
        let data_size = size;
        let carrots_used = 0;
        do carrots_assemble();
        return this;
    }

    // method void moveCarrots(int goalX, int goalY){

    // }

    method void updateCarGraphics () {
        var int i;
        let i = 0;
        while (i < carrots_used){
            do Carrot.draw_LEGACY(carrot_yy[0]*32*16 + carrot_xx[0]);
        }
        return;
    }

    method void updateUseCount(int count){
        let carrots_used = count;
        return;
    }

    method Array getXX(){
        return carrot_xx;
    }
    method Array getYY () {
        return carrot_yy;
    }

    method void carrots_assemble(){
        let carrot_yy[0] = 3;
        let carrot_xx[0] = 5;
        let carrot_yy[1] = 7;
        let carrot_xx[1] = 16;
        let carrot_yy[2] = 12;
        let carrot_xx[2] = 29;
        let carrot_yy[3] = 14;
        let carrot_xx[3] = 27;
        let carrot_yy[4] = 14;
        let carrot_xx[4] = 31;
        let carrot_yy[5] = 15;
        let carrot_xx[5] = 10;
        let carrot_yy[6] = 6;
        let carrot_xx[6] = 26;
        let carrot_yy[7] = 8;
        let carrot_xx[7] = 14;
        let carrot_yy[8] = 13;
        let carrot_xx[8] = 14;
        let carrot_yy[9] = 7;
        let carrot_xx[9] = 16;
        return;
    }

    method void dispose(){
        do carrot_xx.dispose();
        do carrot_yy.dispose();
        do Memory.deAlloc(this);
        return;
    }
}