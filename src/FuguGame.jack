/** game state */
class FuguGame {
    field Fugu fugu;
    field int direction;
    field Carrot carrot;

    constructor FuguGame new(){
        let fugu = Fugu.new(0,0);
        let carrot = Carrot.new(40,7);
        let direction = 0;
        return this;
    }

    method void dispose(){
        do fugu.dispose();
        do carrot.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method int calc_location(int Ay, int Ax){
        //16-pixel grid
        //256 in height, 32 in width
        return Ay*32 + Ax;
    }

    method void moveFugu(){
        if (direction = 1) { do fugu.moveLeft(); }
        if (direction = 2) { do fugu.moveUp(); }
        if (direction = 3) { do fugu.moveRight(); }
        if (direction = 4) { do fugu.moveDown(); }
        return;
    }    

    method void run(){
        var char key;
        var boolean exit;
        var int car_l1;
        var int car_l2;
        var boolean even_check;
        let exit = false;
        do carrot.draw(calc_location(carrot.getY(), carrot.getX()));
        do carrot.draw(calc_location(100, 20));
        do carrot.draw(calc_location(152, 1));

        


        let car_l1 = 0;
        let car_l2 = 3;
        let even_check = true;


        while (~exit){
            let key = 1;
            

            while (~((key = 0) | (key = 81))) {
                let key = Keyboard.keyPressed();
                if (key = 81) { let exit = true; }
                if ((key = 130) | (key = 131) | (key = 132) | (key = 133)) {
                    let direction = key - 129;
                    do moveFugu();
                    //должно меняться: 0 и 1, 1 и 0
                    do carrot.erase(calc_location(100+car_l1, 20));
                    do carrot.draw(calc_location(100+car_l2, 20));
                    do Sys.wait(5);

                    //let fugu.x = 10; нельзя так делать
                    

                    if (even_check){
                        let car_l1 = 3;
                        let car_l2 = 0;
                    }
                    if (~even_check){
                        let car_l1 = 0;
                        let car_l2 = 3;
                    }
                    let even_check = ~even_check;

                }
            }

        }
        return;
    }

}