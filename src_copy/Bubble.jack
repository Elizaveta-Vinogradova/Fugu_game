class Bubble {
    field int lifetime;
    field int x;
    field int y;

    constructor Bubble new(int startX, int startY) {
        let lifetime = 50;
        let x = startX;
        let y = startY;
        do draw(y * 32 + x);
        return this;
    }

    method void draw(int location) {
        let location = 16384 + location;
        do Memory.poke(location + 0, 14336);
        do Memory.poke(location + 32, 25600);
        do Memory.poke(location + 64, -13824);
        do Memory.poke(location + 96, -32242);
        do Memory.poke(location + 128, -32239);
        do Memory.poke(location + 160, 17425);
        do Memory.poke(location + 192, 15353);
        do Memory.poke(location + 224, 1054);
        do Memory.poke(location + 256, 2060);
        do Memory.poke(location + 288, 2052);
        do Memory.poke(location + 320, 2052);
        do Memory.poke(location + 352, 2052);
        do Memory.poke(location + 384, 2436);
        do Memory.poke(location + 416, 2436);
        do Memory.poke(location + 448, 1032);
        do Memory.poke(location + 480, 1008);
        return;
    }

    method void erase(int location) {
        let location = 16384 + location;
        do Memory.poke(location + 0, 0);
        do Memory.poke(location + 32, 0);
        do Memory.poke(location + 64, 0);
        do Memory.poke(location + 96, 0);
        do Memory.poke(location + 128, 0);
        do Memory.poke(location + 160, 0);
        do Memory.poke(location + 192, 0);
        do Memory.poke(location + 224, 0);
        do Memory.poke(location + 256, 0);
        do Memory.poke(location + 288, 0);
        do Memory.poke(location + 320, 0);
        do Memory.poke(location + 352, 0);
        do Memory.poke(location + 384, 0);
        do Memory.poke(location + 416, 0);
        do Memory.poke(location + 448, 0);
        do Memory.poke(location + 480, 0);
        return;
    }

    method boolean moveRight() {
        if (x > 0) {
            do erase(y * 32 + x);
            let x = x - 1;
            do draw(y * 32 + x);
            return true;
        }
        return false;
    }

    method void dispose() {
        do erase(y * 32 + x);
        do Memory.deAlloc(this);
        return;
    }
}